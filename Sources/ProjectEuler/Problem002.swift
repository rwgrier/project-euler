/// Project Euler [Problem 2](https://projecteuler.net/problem=2)
/// > Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
/// >
/// > 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
/// >
/// > By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
struct Problem002 {
    
    init() { }
    
    func sumEvenFibonacci(_ max: Int) -> Int {
        generateFibonacciNumbersUpTo(max)
            .filter { $0.isMultiple(of: 2) }
            .reduce(0, +)
    }

    private func generateFibonacciNumbersUpTo(_ max: Int) -> [Int] {
        let generator = FibonacciGenerator()
        var numbers: [Int: Int] = [:]
        var index: Int = 0
        var fibonacci = 1
        
        while fibonacci <= max {
            defer { index += 1 }
            fibonacci = generator.fibonacci(at: index)
            
            guard fibonacci <= max else { break }
            numbers[index] = fibonacci
        }
        
        return numbers.values.sorted()
    }
}
